name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 pnpm 缓存路径
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-  

      # Set up Node.js environment using .nvmrc
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      # Install pnpm globally via npm
      - name: Install pnpm
        run: npm install -g pnpm

      # Check pnpm version to verify installation
      - name: Check pnpm version
        run: pnpm --version

      # Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Build the project
      - name: Build the project
        run: pnpm build

      - name: List output files
        run: ls -alh dist 

      # 上传 dist 目录作为 artifact
      - name: Upload dist directory
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist  

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 下载构建后的 artifact
      - name: Download dist files
        uses: actions/download-artifact@v3
        with:
          name: dist

      # 列出当前目录结构，确认构建后的文件
      - name: List current directory
        run: ls -alh

      # 确保这些构建文件传输到服务器
      - name: Deploy to Server via SCP
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          # 使用 scp 传输项目根目录下的文件到服务器
          scp -i private_key -o StrictHostKeyChecking=no -r ./* $SERVER_USER@$SERVER_HOST:"C:/website/admin"
          # 重启 Nginx 服务
          ssh -i private_key $SERVER_USER@$SERVER_HOST 'powershell.exe "Restart-Service -Name nginx"'
          rm private_key


