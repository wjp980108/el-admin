name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment using .nvmrc
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      # Install pnpm globally via npm
      - name: Install pnpm
        run: npm install -g pnpm

      # Check pnpm version to verify installation
      - name: Check pnpm version
        run: pnpm --version

      # Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Build the project
      - name: Build the project
        run: pnpm build

      - name: List output files
        run: ls -alh dist 

  deploy:
    needs: build  # 确保只有在构建成功后才执行部署
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code again in the deploy step
      - name: Checkout code
        uses: actions/checkout@v3

      # Debugging environment variables
      - name: Debugging server connection
        run: |
          echo "SERVER_HOST: $SERVER_HOST"
          echo "SERVER_USER: $SERVER_USER"
          echo "SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY"
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Deploy to the Windows server via SSH and copy files
      - name: Deploy to Server via SCP
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          pwd
          ls -alh
          scp -i private_key -o StrictHostKeyChecking=no -r ./dist/* $SERVER_USER@$SERVER_HOST:"C:/website/admin"
          ssh -i private_key $SERVER_USER@$SERVER_HOST 'powershell.exe "Restart-Service -Name nginx"'
          rm private_key
