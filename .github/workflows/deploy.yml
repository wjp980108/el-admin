name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 使用 pnpm 的全局存储目录作为缓存键
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm
          key: v3-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v3-pnpm-  

      # Set up Node.js environment using .nvmrc
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          #node-version-file: '.nvmrc'
          cache: 'pnpm'

#      # Install pnpm globally via npm
#      - name: Install pnpm
#        run: npm install -g pnpm

      # Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Build the project
      - name: Build the project
        run: pnpm build

      # 列出 dist 目录中的文件，确保构建后的产物文件存在
      - name: List dist directory
        run: ls -alh

      - name: Upload dist directory
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: ./dist


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 下载构建后的 artifact
      - name: Download dist files
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact
          path: ./dist

      # 列出当前目录结构，确认构建后的文件
      - name: List current directory
        run: ls -alh

      # 通过 scp 插件将构建产物传输到 Windows 服务器
      - name: Transfer files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./dist/
          target: C:/website/admin
          strip_components: 2
